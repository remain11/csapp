#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion

	irmovq $3, %rcx
	andq %rdx, %rcx 
	subq %rcx, %rdx
	andq %rcx,%rcx		# len <= 0?
	jle Stage		# if so, goto Stage:
Loop1:	
	mrmovq (%rdi), %r8	# read val from src...
	rmmovq %r8, (%rsi)	# ...and store it to dst
	andq %r8, %r8		# val <= 0?
	jle Npos1		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos1:	
	iaddq $8, %rdi		# src++
	iaddq $8, %rsi		# dst++
	iaddq $-1, %rcx		# len--
	jg Loop1			# if so, goto Loop:

Stage:
	andq %rdx,%rdx		# len <= 0?
	jle Done		# if so, goto Done:
Loop2:	
	mrmovq (%rdi), %r8	# read val from src...
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	rmmovq %r8, (%rsi)	# ...and store it to dst
	rmmovq %r9, 8(%rsi)
	rmmovq %r10, 16(%rsi)
	rmmovq %r11, 24(%rsi)
Test1:	
	andq %r8, %r8		# val <= 0?
	jle Test2		# if so, goto Test:
	iaddq $1, %rax		# count++
Test2:
	andq %r9, %r9
	jle Test3
	iaddq $1, %rax
Test3:
	andq %r10, %r10
	jle Test4
	iaddq $1, %rax
Test4:
	andq %r11, %r11
	jle Npos2
	iaddq $1, %rax
Npos2:	
	iaddq $32, %rdi		# src++
	iaddq $32, %rsi		# dst++
	iaddq $-4, %rdx		# len--
	jg Loop2			# if so, goto Loop:



##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
